@model IEnumerable<MELV_IS.Models.FlightRequest>

@{
    ViewBag.Title = "FlightCreationForm";
}


<h2>Kelionių prašymai</h2>
<br />

@{
    if ((string)ViewData["FlightCreationForm_Error0"] == "")
    {
        if (ViewData["recc_day0"] != null)
        {
            <div style="color: green; font-weight: bold">Rekomenduojama išvykimo data (Žemė - Marsas): @(((DateTime)ViewData["recc_day0"]).ToString("yyyy-MM-dd"))</div>
        }
    }
    else
    {
        <div style="color: red; font-weight: bold;">@ViewData["FlightCreationForm_Error0"]</div>
    }

    if ((string)ViewData["FlightCreationForm_Error1"] == "")
    {
        if (ViewData["recc_day1"] != null)
        {
            <div style="color: green; font-weight: bold">Rekomenduojama išvykimo data (Marsas - Žemė): @(((DateTime)ViewData["recc_day1"]).ToString("yyyy-MM-dd"))</div>
        }
    }
    else
    {
        <div style="color: red; font-weight: bold;">@ViewData["FlightCreationForm_Error1"]</div>
    }
}

<br />
<br />
<div style="padding-bottom: 5px;">Pasirinkite išvykimo datą: </div>
<div style="display: flex; justify-content: space-between; align-items: center;">
    <div>
        <span>Kryptis: </span>
        <select id="direction">
            <option value="0">Žemė - Marsas</option>
            <option value="1">Marsas - Žemė</option>
        </select>
        <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Išvykimo data: </span>
        <input type="text" id="datepicker" onchange="enterFlightDate()">
        <span style="padding-left: 20px;" id="secondDate"></span>
    </div>
    <div>
        <a href="#" class="btn btn-success registerFlightButton" id="submit" style="margin-left: 20px;">Registruoti naują skrydį</a>
    </div>
</div>

<br />
<br />

<table class="table table-striped datatable">
    <thead>
        <tr style="background-color: lightblue">
            <th style="width: 25%">
                @Html.DisplayNameFor(model => model.Direction)
            </th>
            <th style="width: 25%">
                @Html.DisplayNameFor(model => model.DepartureDate)
            </th>
            <th style="width: 25%">
                @Html.DisplayNameFor(model => model.ArrivalDate)
            </th>
            <th style="width: 25%">
                @Html.DisplayNameFor(model => model.Client)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        if (item.Direction)
                        {
                            <text>Marsas - Žemė</text>
                        }
                        else
                        {
                            <text>Žemė - Marsas</text>
                        }
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.DepartureDate)</td>
                <td>@Html.DisplayFor(modelItem => item.ArrivalDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Client.Name) @Html.DisplayFor(modelItem => item.Client.LastName)</td>
            </tr>
        }
    </tbody>
</table>

@section scripts{
    <script>
        $(function () {
            $("#datepicker").datepicker({ dateFormat: "yy-mm-dd", stepMonths: 0 });
        });
        enterFlightDate();

        $('#submit').click(function (e) {
            e.preventDefault();
            window.location.href = "@Url.Action("submit", "Flight")" + '?date1=' + $('#datepicker').val() + '&date2=' + $('#secondDate').text().slice(15) + '&direction=' + $('#direction').find('option:selected').val();
        });

        function enterFlightDate() {
            //tikrinti ar ne tuscia, ar ne nesamone, ar sitam menesi sitais metais
            if ($('#datepicker').val() == "") {
                $("#secondDate").text("");
                $('.registerFlightButton').hide();
                return;
            }

            if (Date.parse($('#datepicker').val() == NaN)) {
                $("#secondDate").text("");
                $('.registerFlightButton').hide();
                return;
            }

            jQuery.ajax({
                url: 'calculateSecondDate',
                type: 'POST',
                contentType: 'application/json',
                data: '{firstDate: "' + new Date(Date.parse($('#datepicker').val())).toISOString().slice(0, 10) + '", direction: "' + $('#direction').find('option:selected').val() + '" }',
                success: function (result) {
                    $('#datepicker').val(new Date(Date.parse($('#datepicker').val())).toISOString().slice(0, 10));
                    var res;
                    if ($('#direction').find('option:selected').val() == 0) {
                        res = result.DateMars;
                    } else {
                        res = result.DateEarth;
                    }
                    console.log(result);
                    $("#secondDate").text("Atvykimo data: " + convertToJavaScriptDate(res));
                    $('.registerFlightButton').show();
                },
                failure: function (error) {
                    console.log(error);
                }
            });
        }

        function convertToJavaScriptDate(value) {
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            return getFormattedDate(parseFloat(results[1]));
        }

        function getFormattedDate(date) {
            var formatDate = new Date(date);
            var month = formatDate.getMonth() + 1;
            var day = formatDate.getDate();
            var year = formatDate.getFullYear();
            if (month < 10) {
                month = '0' + month;
            }
            if (day < 10) {
                day = '0' + day;
            }
            return year + "-" + month + "-" + day;
        }
    </script>
}

@*testavimas*@

@*@for (int i = 1; i <= 30; i++)
    {
        <div>@(((double[])ViewData["dayRatings"])[i])</div>
    }*@
