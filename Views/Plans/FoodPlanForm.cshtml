@model MELV_IS.Models.FoodPlan

@{
    if (ViewBag.ID == -1)
    {
        //testerss
        ViewBag.Title = "Naujas maisto planas";
    }
    else
    {
        ViewBag.Title = "Keisti maisto planą";
    }
}



<h2>@ViewBag.Title</h2>
<br/>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <fieldset>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Text, new { @class = "form-control", @cols = 60, @rows = 15 } )
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Išsaugoti" class="btn btn-success" />
                </div>
            </div>
        </div>
    </fieldset>
    
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
